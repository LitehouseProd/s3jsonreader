# Use the latest 2.1 version of CircleCI pipeline process engine.
# See: https://circleci.com/docs/2.0/configuration-reference
version: 2.1

# Orbs are reusable packages of CircleCI configuration that you may share across projects, enabling you to create encapsulated, parameterized commands, jobs, and executors that can be used across multiple projects.
# See: https://circleci.com/docs/2.0/orb-intro/
orbs:
  python: circleci/python@2.0.2
  aws-ecr: circleci/aws-ecr@7.3.0
  aws-cli: circleci/aws-cli@2.0.3


jobs:
  cloudformation:
    docker:
      - image: cimg/python:3.10.2
    resource_class: medium
    steps:
      - checkout
      - python/install-packages:
          pkg-manager: pip
          app-dir: ./python
          pip-dependency-file: requirements.txt
      - aws-cli/setup:
          override-installed: true
          aws-access-key-id: ACCESS_KEY_ID 
          aws-region: AWS_REGION
          aws-secret-access-key: SECRET_ACCESS_KEY 
      - run:
          command: aws cloudformation deploy --stack $STACK_NAME --template Cloudformation/ecrreviewer.yaml --parameter-overrides ImageTag=${CIRCLE_SHA1}
          name: deploy stack
  build-and-test: 
    docker:
      - image: cimg/python:3.10.2
    resource_class: medium
    steps:
      - checkout
      - python/install-packages:
          pkg-manager: pip
          app-dir: ./python
          pip-dependency-file: requirements.txt
      - aws-cli/setup:
          override-installed: true
          aws-access-key-id: ACCESS_KEY_ID 
          aws-region: AWS_REGION
          aws-secret-access-key: SECRET_ACCESS_KEY 
      - run:
          name: Run Tests
          command: |
           mkdir test-results
          pytest --junitxml=test-results/junit.xml -rA ./python/tests.py
      - store_test_results:
          path: test-results
      - store_artifacts:
          path: test-results
          destination: trl
      - run:
          name: Run script
          command: python3 ./python/main.py $S3_URI


workflows:
  build_and_push: # This is the name of the workflow, feel free to change it to better match your workflow.
    # Inside the workflow, you define the jobs you want to run.
    jobs:
      - cloudformation
      - build-and-test
      - aws-ecr/build-and-push-image:
          account-url: AWS_ECR_ACCOUNT_URL
          aws-access-key-id: ACCESS_KEY_ID
          aws-secret-access-key: SECRET_ACCESS_KEY
          create-repo: false
          dockerfile: Dockerfile
          no-output-timeout: 20m
          path: ./
          profile-name: PROFILE
          region: AWS_REGION
          repo: ecrjsontest
          skip-when-tags-exist: false
          tag: 'latest,s3Reader'
          requires:
            - build-and-test
          filters:
            branches:
              only: main
